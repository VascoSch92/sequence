# Set of rules enabled
select = [
    "E", # Pycodestyle Error
    "F", # Pyflakes
    "B", # Flake8-bugbear
    "W", # Pycodestyle Warning
    "N", # pep8-naming
    "ANN", # flake8-annotations
    "D101", # undocumented-public-class
    "D200", # One-line docstring should fit on one line
    "D201", # no-blank-line-before-function
    "D202", # No blank lines allowed after function docstring
    "D211", # blank-line-before-class
    "D300", # Use triple double quotes """
    "D403", # first-line-capitalized
    "D404", # First word of the docstring should not be "This"
    "D405", # capitalize-section-name
    "D419", # empty-docstring
    "Q001", # bad-quotes-multiline-string
    "UP003", # Use {} instead of type(...)
    "UP008", # Use super() instead of super(_class_, self)
    "UP011", # Unnecessary parentheses to functools.lru_cache
    "UP027", # Replace unpacked list comprehension with a generator expression
    "UP032", # Use f-string instead of format call
    "C4", # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "NPY", # NumPy-specific rules (NPY)
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "FURB", # refurb
    "RUF", # Ruff-specific rules
]

# Ignored rules
ignore = [
    "ANN101", # Missing type for self
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "B020", # Checks for contextlib.suppress without arguments
    "E226", # Missing withespace around arithmetic operations
    "B023", # Checks for function definitions that use a loop variable
    "PTH123", # Checks for uses of the open builtin
    "PIE804", # Checks for unnecessary dict kwargs
    "W605", # Checks for invalid escape sequences
    "F403", # undefined-local-with-import-star
    "F405", # undefined-local-with-import-star-usage
]

# Set the max length of a line
line-length = 121

# The style in which the output message should be formatted
output-format = "github"

# Set of rules ignored per file
[per-file-ignores]
"sequence/_init_.py" = [
    "F401", # Checks for unused imports
]
"tests/*" = [
    "D101", # undocumented-public-class
    "RUF012", # mutable-class-default
    "ANN", # flake8-annotations
]
